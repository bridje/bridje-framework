
package ${entity.model.package};

import java.sql.JDBCType;
import org.bridje.orm.*;
import org.bridje.sql.*;
import java.util.Objects;
import javax.annotation.Generated;

/**
 * This class represents the ${entity.name} entity.
 * ${entity.description!}
 */
@Generated(value = "org.bridje.orm.srcgen.OrmSourceGenerator", date = "${.now?string("yyyy-MM-dd")}", comments = "Generated by Bridje ORM API")
public class ${entity.name}
{
    /**
     * This static field holds a reference to the Table object that represents
     * the SQL table used by the ${entity.name} entity.
     * ${entity.description!}
     */
    public static final Table TABLE;

    <#list entity.allFields as field>
    /**
     * This static field holds a reference to the TableColumn object that represents
     * the SQL column used by the ${field.name} field.
     * ${field.description!}
     */
    public static final ${field.columnClass}<${field.type.javaType}, ${field.type.readType}> ${field.column?upper_case};

    </#list>
    static {
        <#list entity.allFields as field>
        ${field.name?upper_case} = SQL.build${field.columnClass}("${field.column}", ${model.name}Types.${field.type.name}, false, null);

        </#list>
        TABLE = SQL.buildTable("${entity.table?lower_case}")
                    .key(${entity.key.name?upper_case})
                    <#list entity.fields as field>
                    .column(${field.column?upper_case})
                    </#list>
                    .build();
    }

    <#list entity.allFields as field>
    private ${field.type.javaType} ${field.name};

    </#list>
    <#list entity.allFields as field>
    /**
     * Gets the value of the ${field.name} field.
     * ${field.description!}
     * @return A ${field.type.javaType} object representing the value 
     * of the ${field.name} field.
     */
    public ${field.type.javaType} get${field.name?cap_first}()
    {
        return this.${field.name};
    }

    /**
     * Sets the value of the ${field.name} field.
     * ${field.description!}
     * @param ${field.name} The ${field.type.javaType} object representing the value 
     * of the ${field.name} field.
     */
    public void set${field.name?cap_first}(${field.type.javaType} ${field.name})
    {
        this.${field.name} = ${field.name};
    }

    </#list>
    @Override
    public int hashCode()
    {
        if(get${entity.key.name?cap_first}() == null)
        {
            return super.hashCode();
        }
        return get${entity.key.name?cap_first}().hashCode();
    }

    @Override
    public boolean equals(Object obj)
    {
        if (this == obj) return true;
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;
        final ${entity.name} other = (${entity.name}) obj;
        return Objects.equals(this.get${entity.key.name?cap_first}(), other.get${entity.key.name?cap_first}());
    }
}
