/*
 * Copyright 2016 Bridje Framework.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.bridje.srcgen;

import java.io.IOException;
import java.util.Map;
import javafx.scene.control.TreeItem;
import org.bridje.vfs.VFile;

/**
 * A source code generator.
 *
 * @param <T> The type for this generator.
 */
public interface SourceGenerator<T>
{
    /**
     * Finds a Map with the available data that needs to be generated by this
     * object.
     *
     * @return A map with the data objects and the corresponding VFiles.
     */
    Map<T, VFile> findData();

    /**
     * Generates the sources for the given data and the given file.
     *
     * @param data The data for the code generation.
     * @param file The file that the data was readed from.
     *
     * @throws IOException If any io exception occurs.
     */
    void generateSources(T data, VFile file) throws IOException;

    /**
     * Creates a TreeItem node for the source generator, the node 
     * will be put in the souce generation data editor. 
     * If this source generator does not support edition of itÂ´s data this 
     * method should return null.
     * 
     * @return The TreeItem for this source generator, or null if this generator
     * does not support edition.
     */
    TreeItem<Object> createEditorTreeItem();
}
